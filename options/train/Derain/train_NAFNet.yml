# general settings
name: train_NAFNET_Derain
model_type: SRModel
scale: 1
num_gpu: 1
manual_seed: 0

# dataset and data loader settings
datasets:
  train:
    name: Rain100L_test_train
    type: PairedImageDataset
    dataroot_gt: /root/autodl-tmp/BasicSR-master/datasets/Rain100L_test_train/RainTrainL/norain
    dataroot_lq: /root/autodl-tmp/BasicSR-master/datasets/Rain100L_test_train/RainTrainL/rain
    filename_tmpl: '{}'
    io_backend:
      type: disk

    gt_size: 128
    use_hflip: true
    use_rot: true

    # data loader
    num_worker_per_gpu: 0
    batch_size_per_gpu: 10
    dataset_enlarge_ratio: 5
    prefetch_mode: ~

  val:
    name: Rain100L_test_train
    type: PairedImageDataset
    dataroot_gt: datasets/Rain100L_test_train/Rain100L/norain
    dataroot_lq: datasets/Rain100L_test_train/Rain100L/rain
    io_backend:
      type: disk

# network structures
network_g:
  type: NAFNet
  img_channel: 3
  width: 64
  middle_blk_num: 1
  enc_blk_nums: [1, 1, 1, 28]
  dec_blk_nums: [1, 1, 1, 1]

# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 2e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [40000]
    gamma: 0.5

  total_iter: 20000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean

# validation settings
val:
  val_freq: !!float 100
  save_img: false

  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: true
    ssim:
      type: calculate_ssim
      crop_border: 0
      test_y_channel: true

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 5e3
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
